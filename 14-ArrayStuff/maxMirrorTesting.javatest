import java.util.*;
import java.io.*;

public class maxMirror{
	public int maxMirrorMethod(int[] nums) {
  		//Build array backwards
  		int[] back = new int[nums.length];
  		int counter = 0;
  		for (int i = 0; i < nums.length; i++){
    			back[i] = nums[nums.length - 1 - i];
			System.out.println("Create back: " + back[i]);
  		}

  		//Slide and match
  		for (int i = 0; i < nums.length; i++){
    			int tick = 0;
			System.out.println("------------------------------    i = " + i);
    			for (int k = 0; k < i + 1; k++){
				System.out.println("K = " + k + "Val:" + nums[k] + "  " + back[back.length - i + k - 1]);
      				if (nums[k] == back[back.length - i + k - 1]){
        				tick++;
        				if (tick > counter) {counter = tick;}
      				}
      				else{
        				tick = 0;
      				}
				System.out.println("" + tick);
    			}
  		}
                for (int i = 0; i < back.length; i++){
                        int tick = 0;
                        System.out.println("------------------------------    i = " + i);
                        for (int k = 0; k < i + 1; k++){
                                System.out.println("K = " + k + "Val:" + back[k] + "  " + nums[nums.length - i + k - 1]);
                                if (back[k] == nums[nums.length - i + k - 1]){
                                        tick++;
                                        if (tick > counter) {counter = tick;}
                                }
                                else{
                                        tick = 0;
                                }
                                System.out.println("" + tick);
                        }
                }

  		return counter;
	}

	public static void main(String[] args){
		maxMirror m = new maxMirror();
		int[] asdf = {7, 1, 2, 9, 7, 2, 1};
		System.out.println(m.maxMirrorMethod(asdf));
	}
}
